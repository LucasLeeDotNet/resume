{"version":3,"sources":["serviceWorker.ts","context/StoreContext.tsx","components/ExperiencesComponent/BulletPointskill.component.tsx","components/ExperiencesComponent/BulletPoint.component.tsx","models/BulletModel.ts","components/ExperiencesComponent/Experience.component.tsx","manifest.ts","context/initialState.ts","models/GenericSnackbarModel.ts","context/reducers.ts","models/ExperienceModel.ts","components/ExperiencesComponent/Experiences.component.tsx","components/dialogs/ExportDialogComponent/ExportDialog.component.tsx","components/HeaderComponent/Header.component.tsx","components/IntroComponent/Intro.component.tsx","components/SkillsComponent/Skill.component.tsx","models/SkillModel.ts","components/SkillsComponent/Skills.component.tsx","components/snackbars/GenericSnackbar.component.tsx","App.tsx","index.tsx","context/actions.ts"],"names":["Boolean","window","location","hostname","match","StoreContext","BulletPointSkill","props","brandIconSet","brandIcons","bulletIndex","onDeleteSkill","onUpdateSkill","skillIndex","skillName","stateSkills","react_default","a","createElement","className","index_es","htmlFor","value","onChange","iSkillIndex","event","target","bind","inputProps","id","name","map","skill","key","icon","react_fontawesome_index_es","concat","IconButton_default","aria-label","onClick","Clear_default","BulletPoint","onAddNewSkill","onBulletPointChange","onDeleteBulletPoint","index","point","skills","title","label","InputLabelProps","shrink","BulletPointskill_component","Add_default","BulletModel","ExperienceComponent","company","bulletPoints","date","editMode","handleDeleteExperience","handleUpdateExperience","handleSelectExperience","position","selectedExperience","_useState","useState","_useState2","Object","slicedToArray","companyEdit","handleEditCompany","_useState3","toUpperCase","_useState4","dateEdit","handleEditDate","_useState5","_useState6","positionEdit","handleEditPosition","_useState7","_useState8","bulletPointsEdit","handleEditBulletPoints","skillsMapByName","reduce","result","objectSpread","defineProperty","useEffect","getAllEdits","handleAddNewSkill","newBulletPoints","toConsumableArray","handleUpdateSkill","handleDeleteSkill","filter","skillIndexInArray","handleDeleteBulletPoint","_id","item","handleEditBulletPoint","BulletPoint_component","assign","variant","color","stopPropagation","Check_default","DeleteForever_default","sort","skillObject","manifest","intro","statement","level","interest","lastUsed","experiences","initialState","experience","uuid","genericSnackbar","open","hideDuration","message","printMode","selectedSkill","types","HIDE_GENERIC_SNACKBAR","SELECT_EXPERIENCE","SELECT_SKILL","SHOW_GENERIC_SNACKBAR","TOGGLE_EDIT","TOGGLE_PRINT","UPDATE_EXPERIENCE","UPDATE_NAME","UPDATE_POSITION","UPDATE_SKILL","UPDATE_STATEMENT","reducer","state","arguments","length","undefined","action","type","Error","ExperienceModel","ExperiencesComponent","_useContext","useContext","dispatch","actions","deleteExperience","selectedExp","updateExperience","Experience_component","ExportDialogComponent","openState","onClose","exportPrefix","aria-labelledby","aria-describedby","JSON","stringify","navigator","clipboard","writeText","then","snackbar","autoFocus","HeaderComponent","exportModalState","toggleExportModal","ImportExport_default","Edit_default","Visibility_default","ExportDialog_component_ExportDialogComponent","IntroComponent","_state$intro","toggleStatementEditMode","togglePositionEditMode","toggleNameEditMode","statementEditMode","positionEditMode","nameEditMode","fullWidth","multiline","margin","style","SkillComponent","newFlag","onSelectSkill","nameEdit","handleEditName","levelEdit","handleEditLevel","interestEdit","handleEditInterest","lastUsedEdit","handleEditLastUsed","_useState9","_useState10","iconEdit","handleEditIcon","faIcon","handleInterestLevelChange","handleLastUsedSelectChange","handleResetSkill","handleSkillIconSelectChange","handleSkillLevelSliderChange","Number","handleSkillNameTextInputChange","keys","skillIcon","iconName","replace","Slider_default","max","min","step","size","SkillModel","SkillsComponent","newSkill","deleteSkill","updateSkill","handleSelectSkill","Skill_component","GenericSnackbarComponent","handleClose","anchorOrigin","horizontal","vertical","autoHideDuration","ContentProps","Close_default","App","Header_component","IntroComponent_Intro_component","SkillsComponent_Skills_component","Experiences_component","GenericSnackbar_component","ReactDOM","render","_ref","children","_useReducer","useReducer","_useReducer2","newExperiences","newSkills","handlePrintModeToggle","$content","document","querySelector","handlePrintPdf","querySelectorAll","forEach","display","html2pdf","filename","image","quality","enableLinks","html2canvas","onrendered","dpi","letterRendering","width","jsPDF","unit","format","orientation","_experience","_skill","useActions","InitialStoreProviderValue","createContext","Provider","src_App_0","getElementById","library","add","faStroopwafel","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9386dfe.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { createContext, useReducer } from \"react\";\nimport IStateModel from \"../models/StateModel\";\nimport { IActionsModel, useActions } from \"./actions\";\nimport { initialState } from \"./initialState\";\nimport { reducer } from \"./reducers\";\n\ninterface IStoreProvider {\n  children: JSX.Element;\n}\n\ninterface IStoreContext {\n  state: IStateModel;\n  dispatch: React.Dispatch<any>;\n  actions: IActionsModel;\n}\n\nlet StoreContext: React.Context<IStoreContext>;\n\nconst StoreProvider = ( { children }: IStoreProvider): JSX.Element => {\n\n  // Create the reducer\n  const [state, dispatch] = useReducer( reducer, initialState );\n\n  // Create a action handler\n  const actions = useActions( state, dispatch );\n\n  // Create the initial value for the new context\n  const InitialStoreProviderValue = { state, dispatch, actions };\n\n  // Create the context\n  StoreContext = createContext( InitialStoreProviderValue );\n\n  return(\n    <StoreContext.Provider value={InitialStoreProviderValue}>\n      {children}\n    </StoreContext.Provider>\n  );\n};\n\nexport { StoreContext, StoreProvider };\n","// React\nimport React, { ChangeEvent } from \"react\";\n\n// Material UI\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n// Materion UI Icon\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\n// FontAwesome\nimport * as brandIcons from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n// Model\nimport SkillModel from \"../../models/SkillModel\";\n\n// Style\nimport \"./BulletPointSkill.style.scss\";\n\nexport interface IBulletPointSkillProps {\n  bulletIndex: number;\n  onDeleteSkill: ( index: number, skillIndex: number ) => void;\n  onUpdateSkill: ( skillName: string, index: number, skillIndex: number ) => void;\n  skillIndex: number;\n  skillName: string;\n  stateSkills: SkillModel[];\n}\n\nconst BulletPointSkill = ( props: IBulletPointSkillProps ) => {\n\n  // Reassigning the icon set to allow for dynamic input of icon names\n  const brandIconSet: any = brandIcons;\n\n  const  {\n    bulletIndex,\n    onDeleteSkill,\n    onUpdateSkill,\n    skillIndex,\n    skillName,\n    stateSkills,\n  } = props;\n\n\n  /**\n   * Updates a specific skill\n   *\n   * @param {number}                          skillIndex  Index of the skill\n   * @param {ChangeEvent<HTMLSelectElement>}  event\n   */\n  const handleUpdateSkill = ( iSkillIndex: number, event: ChangeEvent<HTMLSelectElement>): void => {\n    onUpdateSkill( event.target.value, bulletIndex, iSkillIndex );\n  };\n\n  const handleDeleteSkill = (): void => onDeleteSkill( bulletIndex, skillIndex );\n\n  return (\n    <div className=\"skill-edit-container\">\n\n\n      {\n        /**\n         * Skill Select\n         * ------------\n         */\n      }\n      <FormControl className=\"select-input\" >\n      <InputLabel htmlFor=\"interest\">Select Skills</InputLabel>\n      <Select\n        value={skillName}\n        onChange={handleUpdateSkill.bind( {}, skillIndex )}\n        inputProps={{\n          id: \"skills\",\n          name: \"skills\",\n        }}\n      >\n\n\n        {\n          /**\n           * Select option for skills\n           * ------------------------\n           */\n        }\n        { stateSkills.map( ( skill: SkillModel ) => {\n          return (\n            <MenuItem key={skill.name} value={skill.name}>\n              { skill.icon !== \"\" ?\n                <FontAwesomeIcon className=\"small-skill-icon\" icon={brandIconSet[ `fa${skill.icon}` ]}/>\n                :\n                \"\"\n              } &nbsp;{skill.name}\n            </MenuItem>\n          );\n        } ) }\n\n\n      </Select>\n      </FormControl>\n\n\n      {\n         /**\n          * Remove Skill Button\n          * -------------------\n          */\n      }\n      <IconButton className=\"remove-skill-button\" aria-label=\"Remove Skill\" onClick={handleDeleteSkill}>\n        <ClearIcon />\n      </IconButton>\n    </div>\n  );\n};\n\nexport default BulletPointSkill;\n","// React\nimport React, { ChangeEvent } from \"react\";\n\n// Material UI\nimport { TextField, Tooltip } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n// Materion UI Icon\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\n\n// Component\nimport BulletPointSkill from \"./BulletPointskill.component\";\n\n// Model\nimport SkillModel from \"../../models/SkillModel\";\n\n// Style\nimport \"./BulletPoint.style.scss\";\n\nexport interface IBulletPointProps {\n  onAddNewSkill: ( index: number ) => void;\n  onBulletPointChange: ( index: number, value: string ) => void;\n  onDeleteBulletPoint: ( id: number ) => void;\n  onDeleteSkill: ( index: number, skillIndex: number ) => void;\n  onUpdateSkill: ( skillName: string, index: number, skillIndex: number ) => void;\n  index: number;\n  point: string;\n  skills: string[];\n  stateSkills: SkillModel[];\n}\n\nconst BulletPoint = ( props: IBulletPointProps ) => {\n\n\n  const  {\n    onAddNewSkill,\n    onBulletPointChange,\n    onDeleteBulletPoint,\n    onDeleteSkill,\n    onUpdateSkill,\n    index,\n    point,\n    skills,\n    stateSkills,\n  } = props;\n\n\n  /**\n   * Adds a new skill to the bullet point\n   */\n  const handleAddNewSkill = (): void => onAddNewSkill( index );\n\n\n  /**\n   * Update bullet point text statement\n   *\n   * @param {ChangeEvent<HTMLInputElement>} event\n   */\n  const handleBulletPointTextChange = ( event: ChangeEvent<HTMLInputElement> ): void => {\n    onBulletPointChange( index, event.target.value );\n  };\n\n\n  /**\n   * Deletes the bullet point\n   */\n  const handleDeleteClick = (): void => onDeleteBulletPoint( index );\n\n  return (\n    <div className=\"bulletpoint-container\">\n      <div className=\"bulletpoint-header\">\n        <label className=\"bulletpoint-label\">Bullet Points {index + 1}</label>\n        {\n          /**\n           * Delete Bullet point Button\n           * --------------------------\n           */\n        }\n        <Tooltip title=\"Delete Bullet point\">\n          <IconButton className=\"delete-icon\" aria-label=\"Delete Bullet Point\" onClick={handleDeleteClick}>\n            <ClearIcon />\n          </IconButton>\n        </Tooltip>\n      </div>\n      <div className=\"bulletpoint-row\">\n\n\n        {\n          /**\n           * Bullet Point Text Statement Input\n           * ---------------------------------\n           */\n        }\n        <TextField\n          label=\"Bullet Point Text\"\n          className=\"bullet-input fullwidth-input\"\n          InputLabelProps={{\n              shrink: true,\n          }}\n          onChange={handleBulletPointTextChange}\n          value={point}\n        />\n\n\n      </div>{/** End of bulletpoint-row */}\n\n\n      <div className=\"skills-row\">\n\n\n        {\n          /**\n           * List of skills\n           * --------------\n           */\n        }\n        <div className=\"skills-container\">\n          <div className=\"skill-edit-label\">Skills</div>\n          {\n            skills.map( ( skillName: string, skillIndex: number ) => {\n              return (\n                <BulletPointSkill\n                  key={skillIndex}\n                  bulletIndex={index}\n                  onDeleteSkill={onDeleteSkill}\n                  onUpdateSkill={onUpdateSkill}\n                  skillIndex={skillIndex}\n                  skillName={skillName}\n                  stateSkills={stateSkills}\n                />\n              );\n            } )\n          }\n\n\n          {\n            /**\n             * Add Skill Button\n             * ----------------\n             */\n          }\n          <div className=\"add-skill-container\">\n            <IconButton className=\"add-skill-button\" aria-label=\"add\" onClick={handleAddNewSkill}>\n              <AddIcon />\n            </IconButton>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BulletPoint;\n","export default class BulletModel {\n  public point: string = \"point\";\n  public skills: string[] = [];\n}\n","// React\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\n\n// Material UI\nimport { Fab, TextField, Tooltip } from \"@material-ui/core\";\n\n// Materion UI Icon\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\n// FontAwesome\nimport * as brandIcons from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n// Component\nimport BulletPoint from \"./BulletPoint.component\";\n\n// Model\nimport BulletModel from \"../../models/BulletModel\";\nimport ExperienceModel from \"../../models/ExperienceModel\";\nimport SkillModel from \"../../models/SkillModel\";\n\n// Style\nimport \"./Experience.style.scss\";\n\nexport interface IExperienceComponentProps extends ExperienceModel {\n  editMode: boolean;\n  handleDeleteExperience: Function;\n  handleSelectExperience: Function;\n  handleUpdateExperience: Function;\n  selectedExperience: string;\n  skills: SkillModel[];\n}\n\nconst ExperienceComponent = ( props: IExperienceComponentProps ) => {\n    const {\n      company,\n      bulletPoints,\n      date,\n      editMode,\n      handleDeleteExperience,\n      handleUpdateExperience,\n      handleSelectExperience,\n      id,\n      position,\n      selectedExperience,\n      skills,\n    } = props;\n\n    // Reassigning the icon set to allow for dynamic input of icon names\n    const brandIconSet: any = brandIcons;\n\n    // localstate\n    const [ companyEdit, handleEditCompany ] = useState( company );\n    const [ dateEdit, handleEditDate ] = useState( date.toUpperCase() );\n    const [ positionEdit, handleEditPosition ] = useState( position );\n    const [ bulletPointsEdit, handleEditBulletPoints ] = useState( bulletPoints );\n\n    const skillsMapByName: { [key: string]: SkillModel} = skills.reduce( ( result: object, skill ) => {\n      return {\n        ... result,\n        [skill.name]: skill,\n      };\n    }, {} );\n\n    useEffect( () => {\n        handleEditBulletPoints(bulletPoints);\n    }, [bulletPoints]);\n\n    const getAllEdits = () => {\n      return {\n        bulletPoints: bulletPointsEdit,\n        company: companyEdit,\n        date: dateEdit,\n        id,\n        position: positionEdit,\n      };\n    };\n\n    const handleAddNewBulletPoint = () => {\n      handleUpdateExperience( {\n        ...getAllEdits(),\n        bulletPoints: [ ...bulletPointsEdit, new BulletModel() ],\n      }, id );\n    };\n\n\n    const handleAddNewSkill = ( index: number ): void => {\n      const newBulletPoints = [ ...bulletPointsEdit ];\n      newBulletPoints[ index ] = {\n        ...newBulletPoints[ index ],\n        skills: [ ...newBulletPoints[ index ].skills, \"\" ],\n      };\n\n      handleUpdateExperience( {\n        ...getAllEdits(),\n        bulletPoints: newBulletPoints,\n      }, id );\n    };\n\n\n    const handleUpdateSkill = ( skillName: string, index: number, skillIndex: number ): void => {\n      const newBulletPoints = [ ...bulletPointsEdit ];\n      newBulletPoints[ index ].skills[ skillIndex ] = skillName;\n\n      handleUpdateExperience( {\n        ...getAllEdits(),\n        bulletPoints: newBulletPoints,\n      }, id );\n    };\n\n\n    const handleDeleteSkill = ( index: number, skillIndex: number ): void => {\n      const newBulletPoints = [ ...bulletPointsEdit ];\n      newBulletPoints[ index ].skills = newBulletPoints[ index ].skills.filter(\n        ( skill: string, skillIndexInArray: number ) => skillIndex !== skillIndexInArray,\n      );\n\n      handleUpdateExperience( {\n        ...getAllEdits(),\n        bulletPoints: newBulletPoints,\n      }, id );\n    };\n\n\n    const handleDeleteBulletPoint = ( _id: number ): void => {\n      const newBulletPoints = bulletPoints.filter( ( item: BulletModel, index: number ) => _id !== index );\n      handleUpdateExperience( {\n        ...getAllEdits(),\n        bulletPoints: newBulletPoints,\n      }, id );\n    };\n\n\n    /**\n     * Clicking on the non edit experience, will trigger editing when edit mode is on\n     */\n    const handleExperienceClicked = (): void => {\n      if ( editMode ) { handleSelectExperience(id); }\n    };\n\n\n    /**\n     * Reset the skill by loading in the local state with the props\n     */\n    const handleResetExperience = ( event?: React.MouseEvent<HTMLElement> ): void => {\n      if ( event ) { event.stopPropagation(); }\n\n      handleSelectExperience( \"\" );\n      handleEditCompany( company );\n      handleEditDate( date.toUpperCase() );\n      handleEditPosition( position );\n      handleEditBulletPoints( bulletPoints );\n  };\n\n\n  /**\n   * Update Experience handler gathering edited data for the handleUpdateExperience callback\n   */\n    const _handleUpdateExperience = ( event: React.MouseEvent<HTMLElement> ): void => {\n      event.stopPropagation();\n      if ( editMode ) { handleUpdateExperience( getAllEdits() ); }\n  };\n\n\n    /**\n     * Updates a single bullet in the list of bullets\n     */\n    const handleEditBulletPoint = ( index: number, value: string ): void => {\n      const newBulletPoints = [ ...bulletPointsEdit ];\n      newBulletPoints[ index ] = {\n        point: value,\n        skills: newBulletPoints[ index ].skills,\n      };\n      handleEditBulletPoints( newBulletPoints );\n    };\n\n\n    return (\n      <div>\n        { editMode && selectedExperience === id ?\n        <div className=\"edit-container\">\n          <div className=\"two-input-container fullwidth-input\">\n\n\n            {\n              /**\n               * Company Text Input Field\n               * ------------------------\n               */\n            }\n            <TextField\n                label=\"Edit Company\"\n                className=\"company-input company\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                onChange={( event: ChangeEvent<HTMLInputElement> ) => handleEditCompany( event.target.value )}\n                value={companyEdit}\n            />\n\n\n            {\n              /**\n               * Date Text Input Field\n               * ---------------------\n               */\n            }\n            <TextField\n                label=\"Edit Experinence Date\"\n                className=\"date-input\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                onChange={( event: ChangeEvent<HTMLInputElement> ) => handleEditDate( event.target.value.toUpperCase() )}\n                value={dateEdit}\n            />\n\n\n          </div>\n\n\n          {\n            /**\n             * Position Text Input Field\n             * -------------------------\n             */\n          }\n          <TextField\n              label=\"Edit Position\"\n              className=\"position-input fullwidth-input\"\n              InputLabelProps={{\n                  shrink: true,\n              }}\n              onChange={( event: ChangeEvent<HTMLInputElement> ) => handleEditPosition( event.target.value )}\n              value={positionEdit}\n          />\n\n\n            {\n              /**\n               * Bullet Point Custom Input\n               * -------------------------\n               */\n            }\n            <div className=\"bulletpoints-container\">\n              <label className=\"bulletpoints-label\">Bullet Points</label>\n              { bulletPointsEdit.map(\n                ( point: BulletModel, index: number ) => {\n                  return (\n                    <BulletPoint\n                      key={index}\n                      {...point}\n                      index={index}\n                      onAddNewSkill={handleAddNewSkill}\n                      onBulletPointChange={handleEditBulletPoint}\n                      onDeleteBulletPoint={handleDeleteBulletPoint}\n                      onDeleteSkill={handleDeleteSkill}\n                      onUpdateSkill={handleUpdateSkill}\n                      stateSkills={skills}\n                    />\n                  );\n                },\n              ) }\n\n\n              {\n                 /**\n                  * Add New Bullet Point Button\n                  * ---------------------------\n                  */\n              }\n              <Fab className=\"add-bullet-button\" variant=\"extended\" color=\"inherit\" aria-label=\"Add\" onClick={handleAddNewBulletPoint}>\n                <AddIcon/> &nbsp;\n                Add New Bullet Point\n              </Fab>\n            </div>\n\n\n            {\n              /**\n               * Action Buttons\n               * --------------\n               */\n            }\n            <div className=\"action-button-container\">\n              <Tooltip title=\"Save Experience\">\n                <Fab className=\"check-button action-button\" aria-label=\"Save Experience\" onClick={_handleUpdateExperience} >\n                    <CheckIcon/>\n                </Fab>\n              </Tooltip>\n\n              <Tooltip title=\"Cancel\">\n                <Fab className=\"action-button\" aria-label=\"Cancel\" onClick={handleResetExperience} >\n                    <ClearIcon/>\n                </Fab>\n              </Tooltip>\n\n              <Tooltip title=\"Delete Experience\">\n                <Fab className=\"action-button\" color=\"secondary\" aria-label=\"Delete Experience\" onClick={() => handleDeleteExperience(id)} >\n                    <DeleteForeverIcon/>\n                </Fab>\n              </Tooltip>\n\n            </div>\n        </div>\n        :\n        /**\n         * Non Edit Mode\n         * -------------\n         */\n        <div className={\"exp\" + (editMode ? \" edit-outline clickable\" : \"\")} onClick={handleExperienceClicked}>\n            <div className=\"line1\">\n                <div className=\"company\">{company}</div>\n                <div className=\"date\">{date.toUpperCase()}</div>\n            </div>\n            <h2>{position}</h2>\n            {bulletPoints.map( ( point: BulletModel,\n                                 index: number ) =>\n                <div className=\"bullet-container\" key={index}>\n                  <div key={index} className=\"bullet\"><AddIcon className=\"bullet-icon\"/> {point.point}</div>\n                  <div className=\"nonedit-skill-list\">\n                    { point.skills.sort().map( ( skillName: string, index: number ) => {\n                      const skillObject: SkillModel = skillsMapByName[skillName];\n                      return (\n                        <div className=\"nonedit-skill-item\" key={index}>{ skillObject && skillObject.icon !== \"\" ?\n                          <FontAwesomeIcon className=\"small-skill-icon\" icon={brandIconSet[ `fa${skillObject.icon}` ]}/> : \"\"}\n                          &nbsp;{skillObject && skillObject.name}\n                        </div>);\n                    } ) }\n                  </div>\n                </div>,\n\n              ) }\n        </div>\n        }\n      </div>\n    );\n};\n\nexport default ExperienceComponent;\n","\n  /**\n   * Replace the content of this file (/src/manifest.ts) with the manifest data copied by the export button\n   */\n  import ManifestModel from './models/ManifestModel';\n  \n  export const manifest:ManifestModel = {\n    \"intro\": {\n        \"name\": \"Lucas Lee\",\n        \"position\": \"Javascript - Frontend - Web Developer\",\n        \"statement\": \"Passionate about Javascript, specializing in rapid development with strong sense of design. Leading frontend development on a new marketing platform for EAB. Experienced with a wide range of skillset that extends from frontend frameworks to containerized Devops and AWS.\"\n    },\n    \"skills\": [\n        {\n            \"name\": \"Javascript\",\n            \"level\": 8.5,\n            \"interest\": \"Highest\",\n            \"icon\": \"Js\",\n            \"lastUsed\": \"Current\",\n            \"id\": \"358bdb5f-d149-4278-bda0-2a70f5bc70d8\"\n        },\n        {\n            \"icon\": \"Js\",\n            \"id\": \"80aade22-6baa-4490-b856-4ddfdc66042d\",\n            \"interest\": \"High\",\n            \"lastUsed\": \"Current\",\n            \"level\": 8,\n            \"name\": \"Typescript\"\n        },\n        {\n            \"icon\": \"React\",\n            \"id\": \"a7db161c-0a04-40a0-86ac-0892f67eca57\",\n            \"interest\": \"High\",\n            \"lastUsed\": \"Current\",\n            \"level\": 7.5,\n            \"name\": \"React\"\n        },\n        {\n            \"name\": \"Angular\",\n            \"level\": 7.5,\n            \"interest\": \"High\",\n            \"icon\": \"Angular\",\n            \"lastUsed\": \"This Month\",\n            \"id\": \"a8be6d1d-341b-4fdf-9582-e6c2a6821f92\"\n        },\n        {\n            \"name\": \"Node.js\",\n            \"level\": 7.5,\n            \"interest\": \"High\",\n            \"icon\": \"Node\",\n            \"lastUsed\": \"This Month\",\n            \"id\": \"48cae7c2-3ef0-495a-90f8-5b3fbf3e08ad\"\n        },\n        {\n            \"name\": \"Docker\",\n            \"level\": 7,\n            \"interest\": \"High\",\n            \"icon\": \"Docker\",\n            \"lastUsed\": \"Current\",\n            \"id\": \"5f474fb7-3076-4124-b5f8-5bce65f439bd\"\n        },\n        {\n            \"name\": \"AWS\",\n            \"level\": 6,\n            \"interest\": \"High\",\n            \"icon\": \"Aws\",\n            \"lastUsed\": \"Current\",\n            \"id\": \"bc5aa308-bf70-4c57-ac6d-d28f2801ed84\"\n        },\n        {\n            \"name\": \"React Native\",\n            \"level\": 6,\n            \"interest\": \"High\",\n            \"icon\": \"React\",\n            \"lastUsed\": \"Before This Year\",\n            \"id\": \"c0d9585f-d3c2-4859-8a63-0f7cbe57c8f7\"\n        },\n        {\n            \"icon\": \"Dev\",\n            \"id\": \"90ba2f4e-639b-4193-9048-bc40784d300d\",\n            \"name\": \"MongoDB\",\n            \"level\": 5,\n            \"interest\": \"Moderate\",\n            \"lastUsed\": \"This Year\"\n        },\n        {\n            \"icon\": \"Dev\",\n            \"id\": \"e8e942a1-ebb5-44e1-8c4a-c62209aaae16\",\n            \"name\": \"SQL\",\n            \"level\": 5,\n            \"interest\": \"Moderate\",\n            \"lastUsed\": \"This Year\"\n        },\n        {\n            \"name\": \"Photoshop\",\n            \"level\": 7,\n            \"interest\": \"Moderate\",\n            \"icon\": \"Adobe\",\n            \"lastUsed\": \"This Month\",\n            \"id\": \"9118ca8b-11be-46e7-b9b6-da9a56472be0\"\n        },\n        {\n            \"name\": \"Java\",\n            \"level\": 4,\n            \"interest\": \"Moderate\",\n            \"icon\": \"Java\",\n            \"lastUsed\": \"Before This Year\",\n            \"id\": \"32b5b493-ac3f-4ae8-a1ed-5e32514fe921\"\n        },\n        {\n            \"name\": \"JQuery\",\n            \"level\": 7.5,\n            \"interest\": \"Low\",\n            \"icon\": \"Js\",\n            \"lastUsed\": \"This Year\",\n            \"id\": \"95e2dd33-aef9-4fde-aa9a-78566db83b28\"\n        },\n        {\n            \"icon\": \"Adobe\",\n            \"id\": \"2aaf7969-8b5a-4b69-9f00-f77f8ce2c549\",\n            \"interest\": \"Low\",\n            \"lastUsed\": \"This Year\",\n            \"level\": 7,\n            \"name\": \"Coldfusion\"\n        },\n        {\n            \"icon\": \"Sass\",\n            \"id\": \"0059a59d-2ea4-4d75-9c30-7d0afd1369fc\",\n            \"name\": \"CSS/SCSS\",\n            \"level\": 7,\n            \"interest\": \"High\",\n            \"lastUsed\": \"Current\"\n        },\n        {\n            \"id\": \"c0856e4f-775c-4da5-a6ab-c5f4b929907c\",\n            \"icon\": \"Angular\",\n            \"name\": \"AngularJS\",\n            \"level\": 7.5,\n            \"interest\": \"Moderate\",\n            \"lastUsed\": \"Before This Year\"\n        }\n    ],\n    \"experiences\": [\n        {\n            \"bulletPoints\": [\n                {\n                    \"point\": \"Currently leading frontend development for the new Marketing Platform.\",\n                    \"skills\": [\n                        \"AWS\",\n                        \"CSS/SCSS\",\n                        \"Docker\",\n                        \"Javascript\",\n                        \"MongoDB\",\n                        \"Node.js\",\n                        \"React\",\n                        \"Typescript\"\n                    ]\n                },\n                {\n                    \"point\": \"Lead frontend development for adding Stripe payment system to handle live student application payments.\",\n                    \"skills\": [\n                        \"CSS/SCSS\",\n                        \"Coldfusion\",\n                        \"JQuery\",\n                        \"Javascript\"\n                    ]\n                },\n                {\n                    \"point\": \"Individual project, creating a responsive ad tools for generating google ad previews for routing to clients.\",\n                    \"skills\": [\n                        \"Angular\",\n                        \"CSS/SCSS\",\n                        \"Docker\",\n                        \"Javascript\",\n                        \"Typescript\"\n                    ]\n                },\n                {\n                    \"point\": \"Collaborate on the project to create a budget management tool for calculating estimated cost of display ad for business clients.\",\n                    \"skills\": [\n                        \"CSS/SCSS\",\n                        \"Docker\",\n                        \"Javascript\",\n                        \"MongoDB\",\n                        \"Node.js\",\n                        \"React\"\n                    ]\n                },\n                {\n                    \"point\": \"Lead frontend development for creating a platform for sending out SMS to large volume of Students.\",\n                    \"skills\": [\n                        \"CSS/SCSS\",\n                        \"Coldfusion\",\n                        \"JQuery\",\n                        \"Javascript\"\n                    ]\n                },\n                {\n                    \"point\": \"Lead frontend development for adding Google Drive upload to Student Admission Application.\",\n                    \"skills\": [\n                        \"CSS/SCSS\",\n                        \"Coldfusion\",\n                        \"JQuery\",\n                        \"Javascript\"\n                    ]\n                },\n                {\n                    \"point\": \"Lead frontend development for adding a passwordless login system for Student Application.\",\n                    \"skills\": [\n                        \"CSS/SCSS\",\n                        \"Coldfusion\",\n                        \"JQuery\",\n                        \"Javascript\"\n                    ]\n                },\n                {\n                    \"point\": \"Created the frontend for the code review web tool that became the defacto code review tool for the department.\",\n                    \"skills\": [\n                        \"CSS/SCSS\",\n                        \"Coldfusion\",\n                        \"JQuery\",\n                        \"Javascript\"\n                    ]\n                }\n            ],\n            \"company\": \"EAB Richmond\",\n            \"date\": \"MAY 2015 - PRESENT\",\n            \"id\": \"88f20aea-fee1-49c3-aed4-6db2797e6ef2\",\n            \"position\": \"Senior Web Developer\"\n        },\n        {\n            \"bulletPoints\": [\n                {\n                    \"point\": \"Built a AngularJS touch based Point of Sales system that has been in used to serve customer for the last 4 years.\",\n                    \"skills\": [\n                        \"AngularJS\",\n                        \"Javascript\",\n                        \"MongoDB\",\n                        \"Node.js\",\n                        \"Photoshop\"\n                    ]\n                },\n                {\n                    \"point\": \"Provided functionality for reporting, ordering using a touch interface, table editor, split check payment, orders/receipt printing and menu creation.\",\n                    \"skills\": []\n                },\n                {\n                    \"point\": \"Currently live in production, operating in maintenance mode in 2019.\",\n                    \"skills\": []\n                }\n            ],\n            \"company\": \"Point of Sales System for UMI Sushi Bistro, Short Pump\",\n            \"date\": \"NOV 2014 - MAY 2015\",\n            \"id\": \"6a73d0f0-5538-40bb-8b8e-660e6bd58f29\",\n            \"position\": \"Freelance\"\n        },\n        {\n            \"bulletPoints\": [\n                {\n                    \"point\": \"Built mobile application using a Javascript Platform (Appcelerator).\",\n                    \"skills\": [\n                        \"Javascript\",\n                        \"Node.js\",\n                        \"Photoshop\"\n                    ]\n                },\n                {\n                    \"point\": \"Built Full Stack Web Application with node.\",\n                    \"skills\": [\n                        \"CSS/SCSS\",\n                        \"Javascript\",\n                        \"MongoDB\",\n                        \"Node.js\",\n                        \"Photoshop\"\n                    ]\n                }\n            ],\n            \"company\": \"Shockoe | Mobile by Design\",\n            \"date\": \"MAR 2014 - NOV 2014\",\n            \"id\": \"42055e9d-4aa2-4904-a3b6-bc18c4987de3\",\n            \"position\": \"Mobile Application Developer\"\n        },\n        {\n            \"id\": \"35a8e8ca-1ae4-4e85-8a56-c35b50e37edd\",\n            \"company\": \"Virginia Commonwealth University\",\n            \"date\": \"2009 - 2013\",\n            \"position\": \"Computer Science, Bachelor's Degree\",\n            \"bulletPoints\": []\n        }\n    ]\n}","// Manifest\nimport { manifest } from \"../manifest\";\n\n// Model\nimport ExperienceModel from \"../models/ExperienceModel\";\nimport GenericSnackbarModel from \"../models/GenericSnackbarModel\";\nimport SkillModel from \"../models/SkillModel\";\nimport IStateModel from \"../models/StateModel\";\n\n// Utility\nimport uuid from \"uuid/v4\";\n\nexport const initialState: IStateModel = {\n    ...manifest,\n    editMode: false,\n    experiences: manifest.experiences.map( ( experience: ExperienceModel ) => ({ ...experience, id: uuid() }) ),\n    genericSnackbar: new GenericSnackbarModel(),\n    printMode: false,\n    selectedExperience: \"\",\n    selectedSkill: \"\",\n    skills: manifest.skills.map( ( skill: SkillModel ) => ({ ...skill, id: uuid() }) ),\n};\n","export default class GenericSnackbarModel {\n  public open: boolean = false;\n  public hideDuration: number = 2000;\n  public message: string = \"\";\n}\n","// Model\nimport IStateModel from \"../models/StateModel\";\nimport {\n  initialState,\n} from \"./initialState\";\n\n\nconst types = {\n  HIDE_GENERIC_SNACKBAR: \"HIDE_GENERIC_SNACKBAR\",\n  SELECT_EXPERIENCE: \"SELECT_EXPERIENCE\",\n  SELECT_SKILL: \"SELECT_SKILL\",\n  SHOW_GENERIC_SNACKBAR: \"SHOW_GENERIC_SNACKBAR\",\n  TOGGLE_EDIT: \"TOGGLE_EDIT\",\n  TOGGLE_PRINT: \"TOGGLE_PRINT\",\n  UPDATE_EXPERIENCE: \"UPDATE_EXPERIENCE\",\n  UPDATE_NAME: \"UPDATE_NAME\",\n  UPDATE_POSITION: \"UPDATE_POSITION\",\n  UPDATE_SKILL: \"UPDATE_SKILL\",\n  UPDATE_STATEMENT: \"UPDATE_STATEMENT\",\n};\n\nconst reducer = (state: IStateModel = initialState, action: any): IStateModel => {\n\n  switch (action.type) {\n    /**\n     * Hide the generic snackbar\n     */\n    case types.HIDE_GENERIC_SNACKBAR:\n      return {\n        ...state,\n        genericSnackbar: {\n          ...state.genericSnackbar,\n          open: false,\n        },\n      };\n\n      /**\n       * Select a experience with mouse click in edit mode\n       */\n    case types.SELECT_EXPERIENCE:\n      return {\n        ...state,\n        selectedExperience: action.selectedExperience,\n        selectedSkill: \"\",\n      };\n\n      /**\n       * Select a skill with mouse click\n       */\n    case types.SELECT_SKILL:\n      return {\n        ...state,\n        selectedExperience: \"\",\n        selectedSkill: action.selectedSkill,\n      };\n\n      /**\n       * Show the generic snackbar\n       */\n    case types.SHOW_GENERIC_SNACKBAR:\n      return {\n        ...state,\n        genericSnackbar: {\n          ...state.genericSnackbar,\n          hideDuration: action.hideDuration || state.genericSnackbar.hideDuration,\n          message: action.message,\n          open: true,\n        },\n      };\n\n      /**\n       * Toggle global edit mode\n       */\n    case types.TOGGLE_EDIT:\n      return {\n        ...state,\n        editMode: action.editMode,\n          intro: {\n            ...state.intro,\n          },\n          selectedSkill: state.editMode === true ? \"\" : state.selectedSkill,\n      };\n\n      /**\n       * Toggle element adjustment to enable the page for print\n       */\n    case types.TOGGLE_PRINT:\n      return {\n        ...state,\n        printMode: action.printMode,\n      };\n\n      /**\n       * Update a particular experience\n       */\n    case types.UPDATE_EXPERIENCE:\n      return {\n        ...state,\n        experiences: action.experiences,\n          selectedExperience: action.selectedExperience || \"\",\n      };\n\n      /**\n       * Update the name Field\n       */\n    case types.UPDATE_NAME:\n      return {\n        ...state,\n        intro: {\n          ...state.intro,\n          name: action.name,\n        },\n      };\n\n      /**\n       * Update the position field\n       */\n    case types.UPDATE_POSITION:\n      return {\n        ...state,\n        intro: {\n          ...state.intro,\n          position: action.position,\n        },\n      };\n\n      /**\n       * Update a particular skill\n       */\n    case types.UPDATE_SKILL:\n      return {\n        ...state,\n        selectedSkill: \"\",\n        skills: action.skills,\n      };\n\n\n      /**\n       * Update the statement field\n       */\n    case types.UPDATE_STATEMENT:\n      return {\n        ...state,\n        intro: {\n          ...state.intro,\n          statement: action.statement,\n        },\n      };\n    default:\n      throw new Error(\"Unexpected action\");\n  }\n};\n\nexport {\n  initialState,\n  types,\n  reducer,\n};\n","import BulletModel from \"./BulletModel\";\n\nexport default class ExperienceModel {\n    public id?: string = \"new\";\n    public position: string = \"Developer\";\n    public company: string = \"Company\";\n    public bulletPoints: BulletModel[] = [];\n    public date: string = \"XXXX-XXXX\";\n}\n","// React\nimport React, { useContext } from \"react\";\n\n// Material UI\nimport { Fab } from \"@material-ui/core\";\n\n// Material UI Icon\nimport AddIcon from \"@material-ui/icons/Add\";\n\n// Component\nimport ExperienceComponent from \"./Experience.component\";\n\n// Context\nimport { StoreContext } from \"../../context/StoreContext\";\n\n// Model\nimport { types } from \"../../context/reducers\";\nimport ExperienceModel from \"../../models/ExperienceModel\";\nimport ExperiencesModel from \"../../models/ExperienceModel\";\n\n// Style\nimport \"./Experiences.style.scss\";\n\nconst ExperiencesComponent = ( ) => {\n\n    const { state, dispatch, actions } = useContext(StoreContext);\n    const { editMode, selectedExperience, skills } = state;\n    const experiences: ExperiencesModel[] = state.experiences;\n\n\n    /**\n     * Adds a new experience\n     */\n    const handleAddNewExperience = (): void => handleUpdateExperience( new ExperienceModel() );\n\n\n    /**\n     * Deletes an existing experience\n     *\n     * @param {string} id Unique Id for the experience\n     */\n    const handleDeleteExperience = ( id: string ): void => actions.deleteExperience(id);\n\n\n    /**\n     * Handle update for an exisiting experience\n     */\n    const handleUpdateExperience = ( experience: ExperienceModel, selectedExp?: string ): void => {\n        actions.updateExperience( experience, selectedExp );\n    };\n\n\n    /**\n     * Handle selection of a experience during edit mode\n     * @param id\n     */\n    const handleSelectExperience = ( id: string ): void => {\n        dispatch( {\n            selectedExperience: id,\n            type: types.SELECT_EXPERIENCE,\n        } );\n    };\n\n\n    return (\n      <div className=\"experiences-contaienr\">\n\n\n        {\n          /**\n           * Map of all current experinences\n           * -------------------------------\n           */\n        }\n        {  experiences.map( ( experience: ExperiencesModel ) =>\n          <ExperienceComponent\n            {...experience}\n            key={experience.id}\n            editMode={editMode}\n            handleDeleteExperience={handleDeleteExperience}\n            handleUpdateExperience={handleUpdateExperience}\n            handleSelectExperience={handleSelectExperience}\n            selectedExperience={selectedExperience}\n            skills={skills}\n          /> ) }\n\n\n        {\n          /**\n           * Add Experience Button\n           * ---------------------\n           */\n        }\n        { editMode ?\n          <Fab\n            className=\"add-exp-button\"\n            variant=\"extended\"\n            color=\"inherit\"\n            aria-label=\"Add\"\n            onClick={handleAddNewExperience}\n          >\n            <AddIcon/> &nbsp;\n            Add New Experience\n          </Fab>\n          :\n          undefined }\n\n\n      </div>\n    );\n};\n\nexport default ExperiencesComponent;\n","//React\nimport React, { SyntheticEvent, useContext, useEffect } from 'react';\n\n//Context\nimport { StoreContext } from '../../../context/StoreContext';\n\n//Material UI\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\n\n//Styles\nimport './ExportDialog.component.scss';\n\ndeclare var navigator: NavigatorModel;\n\nexport interface ExportDialogComponentModel{ \n  openState: boolean,\n  onClose: ( event:SyntheticEvent )=>void,\n}\n\ninterface NavigatorModel{ \n  clipboard: any;\n}\n\nexport const ExportDialogComponent = ( props: ExportDialogComponentModel ) => { \n  const { state, dispatch, actions } = useContext(StoreContext);\n  const { openState, onClose } = props;\n  \n  const exportPrefix = `\n  /**\n   * Replace the content of this file (/src/manifest.ts) with the manifest data copied by the export button\n   */\n  import ManifestModel from './models/ManifestModel';\n  \n  export const manifest:ManifestModel = `\n  const handleCopyEvent = () => { \n    navigator.clipboard.writeText(exportPrefix + JSON.stringify({intro: state.intro, skills: state.skills, experiences: state.experiences}, null, 4)).then(function() {\n      actions.snackbar( 'Manifest copied to clipboard' );\n    }, function() {\n      actions.snackbar( 'Manifest copy to clipboard failed, try manually copy and paste the manifest' );\n    });\n  }\n  return ( \n    <Dialog\n      className=\"export-dialog\"\n      open={openState}\n      onClose={onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Export Manifest Data</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          <pre className=\"export-data\">{exportPrefix + JSON.stringify({intro: state.intro, skills: state.skills, experiences: state.experiences}, null, 4)}</pre>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCopyEvent} color=\"primary\">\n          Copy to Clipboard\n        </Button>\n        <Button onClick={onClose} color=\"primary\" autoFocus>\n          Cancel\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}","// React\nimport React, { SyntheticEvent, useContext, useEffect, useState } from \"react\";\n\n// Material\nimport { AppBar, Button, Toolbar, Typography } from \"@material-ui/core\";\n\n// Material UI Icon\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ExportIcon from \"@material-ui/icons/ImportExport\";\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\n\n// Component\nimport { ExportDialogComponent } from \"../dialogs/ExportDialogComponent/ExportDialog.component\";\n\n// State\nimport { types } from \"../../context/reducers\";\nimport { StoreContext } from \"../../context/StoreContext\";\n\n// Style\nimport \"./Header.style.scss\";\n\nconst HeaderComponent = () => {\n    const { state, dispatch, actions } = useContext(StoreContext);\n\n    // local state\n    const [ exportModalState, toggleExportModal ] = useState( false );\n\n    /**\n     * Opening of the export dialog is handled as a local state\n     * @param event Object\n     */\n    const handleExportDialogClose = ( event: SyntheticEvent ): void => {\n      toggleExportModal( false );\n    };\n\n\n    /**\n     * Opens the export Dialog\n     *\n     */\n    const handleOpenExportDialog = () => toggleExportModal( !exportModalState );\n\n\n    /**\n     * Toggle global export mode\n     */\n    const handletoggleEditMode = (): void => {\n        if ( state.editMode ){\n          actions.snackbar( \"Switching to View Mode\" );\n        } else {\n          actions.snackbar( \"Entering Edit Mode, click on an element to edit it\" );\n        }\n        dispatch( {\n            editMode: !state.editMode,\n            type: types.TOGGLE_EDIT,\n        } );\n    };\n\n\n    /**\n     * Remove toolbar for print out\n     */\n    const handlePrintModeClick = () => {\n      actions.handlePrintModeToggle( true );\n    };\n\n\n    return (\n        state.printMode ? <div/> :\n        (\n            <div className=\"header-container\" >\n                <AppBar position=\"static\" color=\"default\">\n                    <Toolbar className=\"toolbar\">\n                        <Typography variant=\"h6\" color=\"inherit\"/>\n                        <div className=\"spacer\" />\n\n\n                        {\n                            /**\n                             * Print Mode toggle\n                             * -----------------\n                             */\n                        }\n                        {/* <Button variant=\"contained\" onClick={ handlePrintModeClick }>\n                            <PrintIcon/> Hide Toolbar for Print\n                        </Button> */}\n\n\n                        {\n                            /**\n                             * Generate PDF Button\n                             */\n                        }\n                        {/* <Button className=\"right-menu-button\"variant=\"contained\" onClick={ actions.handlePrintPdf }>\n                            <DescriptionIcon/> Generate PDF (Has Issues)\n                        </Button> */}\n\n\n                        {\n                            /**\n                             * Export Data Button\n                             * ------------------\n                             */\n                        }\n                        <Button\n                            className=\"right-menu-button\"\n                            variant=\"contained\"\n                            onClick={handleOpenExportDialog}\n                        >\n                            <ExportIcon/> Export Data\n                        </Button>\n\n\n                        {\n                            /**\n                             * Toggle for switching Edit and View Mode\n                             * ---------------------------------------\n                             */\n                        }\n                        <Button className=\"right-menu-button\" variant=\"contained\" onClick={handletoggleEditMode}>\n                            {state.editMode ?\n                                [\"Edit Mode \", <EditIcon key=\"editMode\" className=\"mode-icon\"/>]\n                                :\n                                [\"View Mode\", <VisibilityIcon key=\"visibilityIcon\" className=\"mode-icon\"/>]}\n                        </Button>\n\n\n                    </Toolbar>\n                </AppBar>\n                <ExportDialogComponent onClose={handleExportDialogClose} openState={exportModalState} />\n            </div>\n        )\n    );\n};\n\nexport default HeaderComponent;\n","// React\nimport React, { ChangeEvent, useContext, useEffect, useState } from \"react\";\n\n// Context\nimport { types } from \"../../context/reducers\";\nimport { StoreContext } from \"../../context/StoreContext\";\n\n// Material UI\nimport { Fab, TextField } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\n// Model\nimport IntroModel from \"../../models/IntroModel\";\n\n// Style\nimport \"./Intro.component.scss\";\n\nexport interface IIntroComponentProps {}\n\nconst IntroComponent = ( props: IIntroComponentProps ) => {\n    const { state, dispatch, actions } = useContext(StoreContext);\n    const { position, name, statement }: IntroModel = state.intro;\n    const editMode: boolean = state.editMode;\n\n\n    /**\n     * If editMode is off, ensure local edit state are turned off\n     */\n    useEffect( () => {\n        if ( !editMode ) {\n            toggleStatementEditMode( false );\n            togglePositionEditMode( false );\n            toggleNameEditMode( false );\n        }\n    });\n\n\n    // local state\n    const [ statementEditMode, toggleStatementEditMode ] = useState( false );\n    const [ positionEditMode, togglePositionEditMode ] = useState( false );\n    const [ nameEditMode, toggleNameEditMode ] = useState( false );\n\n\n    /**\n     * Statement Input Update\n     * \n     * @param {ChangeEvent<HTMLInputElement>} event \n     */\n    const handleStatementChange = ( event: ChangeEvent<HTMLInputElement> ) => {\n        dispatch(\n            {\n                type: types.UPDATE_STATEMENT,\n                statement: event.target.value,\n            },\n        );\n    };\n\n\n    /**\n     * Position Input Update\n     * \n     * @param {ChangeEvent<HTMLInputElement>} event\n     */\n    const handlePositionChange = ( event: ChangeEvent<HTMLInputElement> ) => {\n        dispatch(\n            {\n              position: event.target.value,\n              type: types.UPDATE_POSITION,\n            },\n        );\n    };\n\n    const handleNameChange = ( event: ChangeEvent<HTMLInputElement> ) => {\n        dispatch(\n            {\n              name: event.target.value,\n              type: types.UPDATE_NAME,\n            },\n        );\n    };\n\n    return (\n        <div className=\"intro\">\n            {/* Name\n                --------\n            */}\n            <div className={\"name\" + (nameEditMode && editMode ? \" extra-margin\" : \"\") + (editMode && !nameEditMode ? \" edit-outline\" : \"\")}>\n                {\n                    /*  Check Button\n                        ------------\n                    */\n                    nameEditMode && editMode ?\n                    <Fab className=\"edit-icon\" color=\"secondary\" aria-label=\"Edit\" onClick={() => toggleNameEditMode( false )} >\n                        <CheckIcon/>\n                    </Fab> : undefined\n                }\n                { nameEditMode && editMode ?\n                    /*  Name Input\n                        ---------------\n                    */\n                    <TextField\n                        label=\"Edit Name\"\n                        className=\"name-input\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={handleNameChange}\n                        value={name}\n                    /> :\n                    /*  Name View Mode\n                        ------------------\n                    */\n                    <div onClick={() => editMode && toggleNameEditMode( !nameEditMode )}>\n                        <h1 className=\"name\">{name}</h1>\n                    </div>\n                }\n            </div>\n            {/* Position\n                --------\n            */}\n            <div className={\"position\" + (positionEditMode && editMode ? \" extra-margin\" : \"\") + (editMode && !positionEditMode ? \" edit-outline\" : \"\")}>\n                {\n                    /*  Check Button\n                        ------------\n                    */\n                    positionEditMode && editMode ?\n                    <Fab className=\"edit-icon\" color=\"secondary\" aria-label=\"Edit\" onClick={() => togglePositionEditMode( false )} >\n                        <CheckIcon/>\n                    </Fab> : undefined\n                }\n                { positionEditMode && editMode ?\n                    /*  Position Input\n                        ---------------\n                    */\n                    <TextField\n                        label=\"Edit Position\"\n                        className=\"position-input\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={handlePositionChange}\n                        value={position}\n                    /> :\n                    /*  Position View Mode\n                        ------------------\n                    */\n                    <div onClick={() => editMode && togglePositionEditMode( !positionEditMode )}>\n                        {position}\n                    </div>\n                }\n            </div>\n            {/* Statement\n                --------\n            */}\n            <div className={\"statement\" + (statementEditMode && editMode ? \" extra-margin\" : \"\") + (editMode && !statementEditMode ? \" edit-outline\" : \"\")}>\n                {\n                    /*  Check Button\n                        ------------\n                    */\n                    statementEditMode && editMode ?\n                    <Fab className=\"edit-icon\" aria-label=\"Edit\" onClick={() => toggleStatementEditMode( false )} >\n                        <CheckIcon/>\n                    </Fab> : undefined\n                }\n                { statementEditMode && editMode ?\n                    /*  Statement Input\n                        ---------------\n                    */\n                    <TextField\n                        label=\"Edit Statement\"\n                        fullWidth={true}\n                        multiline={true}\n                        className=\"statement-input\"\n                        margin=\"normal\"\n                        style={{ margin: 8 }}\n                        variant=\"outlined\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange={handleStatementChange}\n                        value={statement}\n                    /> :\n                    /*  Statement View Mode\n                        -------------------\n                    */\n                    <div onClick={() => editMode && toggleStatementEditMode( !statementEditMode )}>\n                        {statement}\n                    </div>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default IntroComponent;\n","// React\nimport React, { ChangeEvent, MouseEvent, useState } from \"react\";\n\n// Material UI\nimport {\n  Fab,\n  FormControl,\n  InputLabel,\n  LinearProgress,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@material-ui/core\";\nimport Slider from \"@material-ui/lab/Slider\";\n\n// Material UI\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\n// FontAwesome\nimport * as brandIcons from \"@fortawesome/free-brands-svg-icons\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n// Model\nimport SkillModel from \"../../models/SkillModel\";\n\n// Style\nimport \"./Skill.style.scss\";\n\nexport interface ISkillProps extends SkillModel {\n    editMode: boolean;\n    onDeleteSkill?: (id: string) => void;\n    onUpdateSkill: ( skill: SkillModel ) => void;\n    newFlag?: boolean;\n    onSelectSkill: ( id: string ) => void;\n    selectedSkill: string;\n}\n\nconst SkillComponent = ( props: ISkillProps ) => {\n    const { icon,\n      editMode,\n      onDeleteSkill,\n      onUpdateSkill,\n      id,\n      interest,\n      lastUsed,\n      level,\n      name,\n      newFlag,\n      onSelectSkill,\n      selectedSkill,\n    } = props;\n\n    const [ nameEdit, handleEditName ] = useState( name );\n    const [ levelEdit, handleEditLevel ] = useState( level );\n    const [ interestEdit, handleEditInterest ] = useState( interest );\n    const [ lastUsedEdit, handleEditLastUsed ] = useState( lastUsed );\n    const [ iconEdit, handleEditIcon ] = useState( icon );\n\n    // Reassigning the icon set to allow for dynamic input of icon names\n    const brandIconSet: any = brandIcons;\n    const faIcon = \"fa\" + icon;\n\n\n    /**\n     * Generate the list of options for the skill icon select\n     *\n     * @returns {JSX.Element[]}\n     */\n    const generateIconOptions = ( ): JSX.Element[] => {\n      const generateItem = ( skillIcon: string, index: number ) => {\n        const iconName = skillIcon.replace( /^fa/, \"\" );\n        return (\n          <MenuItem key={index} value={iconName}>\n            { skillIcon !== \"\" ?\n              <FontAwesomeIcon className=\"small-skill-icon\" icon={brandIconSet[ `${skillIcon}` ]}/>\n              :\n              \"\"\n            } &nbsp;&nbsp;{iconName}\n          </MenuItem>\n        );\n      };\n\n      const removeFabAndPrefix = (key: string) => key !== \"fab\" && key !== \"prefix\";\n      return Object.keys(brandIconSet).filter( removeFabAndPrefix ).map( generateItem );\n    };\n\n\n    /**\n     * Return Skillmodel from the editable inputs\n     *\n     * @returns {SkillModel}\n     */\n    const getAllEdits = (): SkillModel => {\n      return {\n          icon: iconEdit,\n          id,\n          interest: interestEdit,\n          lastUsed: lastUsedEdit,\n          level: Number(levelEdit),\n          name: nameEdit,\n      };\n    };\n\n\n    /**\n     * Enters edit mode after selecting a skill\n     *\n     * @returns {void}\n     */\n    const handleSelectSkill = ( event: MouseEvent<HTMLElement> ): void => {\n      if ( editMode && typeof id === \"string\" && selectedSkill !== id ) {\n        // event.currentTarget.scrollIntoView();\n        onSelectSkill( id );\n      }\n    };\n\n\n    const handleDeleteSkill = () => {\n      if ( onDeleteSkill && typeof id === \"string\" ) { onDeleteSkill(id); }\n    };\n\n\n    const handleInterestLevelChange = (event: ChangeEvent<HTMLSelectElement>): void => {\n      handleEditInterest( event.target.value);\n    };\n\n\n    const handleLastUsedSelectChange = (event: ChangeEvent<HTMLSelectElement>): void => {\n      handleEditLastUsed( event.target.value);\n    };\n\n\n    /**\n     * Update Skill handler gathering edited data for the handleUpdateSkill callbac\n     *\n     * @param {React.MouseEvent<HTMLElement>} event Mouse click event\n     * @returns {void}\n     */\n    const handleUpdateSkillClicked = ( event: React.MouseEvent<HTMLElement> ): void => {\n        event.stopPropagation();\n        if ( editMode ) { onUpdateSkill( getAllEdits() ); }\n        if ( newFlag ) { handleResetSkill(); }\n    }  ;\n\n\n    /**\n     * Reset the skill by reverting to the original props\n     *\n     * @param {React.MouseEvent<HTMLElement>} event Mouse click event\n     * @returns {void}\n     */\n    const handleResetSkill = ( event?: React.MouseEvent<HTMLElement> ): void => {\n      if ( event ) { event.stopPropagation(); }\n\n      onSelectSkill( \"\" );\n      handleEditName( name );\n      handleEditLevel( level );\n      handleEditInterest( interest );\n      handleEditLastUsed( lastUsed );\n      handleEditIcon( icon );\n    };\n\n\n    const handleSkillIconSelectChange = (event: ChangeEvent<HTMLSelectElement>): void => {\n      handleEditIcon(event.target.value);\n    };\n\n    const handleSkillLevelSliderChange = (event: ChangeEvent<{}>, value: number ): void => {\n      handleEditLevel( Number(value) );\n    };\n\n    const handleSkillNameTextInputChange = (event: ChangeEvent<HTMLInputElement>): void => {\n      handleEditName(event.target.value);\n    };\n\n\n    /**\n     * Renders the interest level selector\n     *\n     * @returns {JSX.Element}\n     */\n    const renderInterestLevelSelect = (): JSX.Element => (\n      <FormControl className=\"select-input\">\n      <InputLabel htmlFor=\"interest\">Interest</InputLabel>\n      <Select\n        value={interestEdit}\n        onChange={handleInterestLevelChange}\n        inputProps={{\n          id: \"interest\",\n        name: \"interest\",\n        }}\n      >\n        <MenuItem value=\"Low\">Low</MenuItem>\n        <MenuItem value=\"Moderate\">Moderate</MenuItem>\n        <MenuItem value=\"High\">High</MenuItem>\n        <MenuItem value=\"Highest\">Highest</MenuItem>\n      </Select>\n      </FormControl>\n    );\n\n\n    /**\n     * Renders the last used selector\n     *\n     * @returns {JSX.Element}\n     */\n    const renderLastUsedSelect = (): JSX.Element => (\n      <FormControl className=\"select-input\">\n      <InputLabel htmlFor=\"lastUsed\">Last Used</InputLabel>\n      <Select\n        value={lastUsedEdit}\n        onChange={handleLastUsedSelectChange}\n        inputProps={{\n          id: \"lastUsed\",\n        name: \"lastUsed\",\n        }}\n      >\n        <MenuItem value=\"Current\">Current</MenuItem>\n        <MenuItem value=\"This Month\">This Month</MenuItem>\n        <MenuItem value=\"Last Month\">Last Month</MenuItem>\n        <MenuItem value=\"This Year\">This Year</MenuItem>\n        <MenuItem value=\"Before This Year\">Before This Year</MenuItem>\n      </Select>\n      </FormControl>\n    );\n\n\n    /**\n     * Renders the skill icon selector\n     *\n     * @returns {JSX.Element}\n     */\n    const renderSkillIconSelect = (): JSX.Element => (\n      <FormControl className=\"select-input\" >\n        <InputLabel htmlFor=\"skill-icon\">Select Skills</InputLabel>\n        <Select\n          id=\"skill-icon\"\n          value={iconEdit}\n          onChange={handleSkillIconSelectChange}\n        >\n          {generateIconOptions()}\n        </Select>\n      </FormControl>\n    );\n\n\n    /**\n     * Renders the skill level text input\n     *\n     * @returns {JSX.Element}\n     */\n    const renderSkillLevelSlider = (): JSX.Element => (\n      <div className=\"skill-level-container\">\n      <InputLabel className=\"skill-level-label\" htmlFor=\"skill-level\">Skill Level</InputLabel>\n      <div className=\"skill-level-value\">{levelEdit}</div>\n      <Slider\n        id=\"skill-level\"\n        value={levelEdit}\n        onChange={handleSkillLevelSliderChange}\n        max={10}\n        min={0.5}\n        step={0.5}\n      />\n      </div>\n    );\n\n\n    /**\n     * Renders the skill name text input\n     *\n     * @returns {JSX.Element}\n     */\n    const renderSkillNameTextInput = (): JSX.Element => (\n      <TextField\n        label=\"Edit Skill Name\"\n        className=\"text-input\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={handleSkillNameTextInputChange}\n        value={nameEdit}\n      />\n    );\n\n\n    /**\n     * Renders the static skill preview\n     *\n     * @returns {JSX.Element[]}\n     */\n    const renderStaticSkillPreivew = (): JSX.Element[] => {\n      return [\n        (\n          <div className=\"icon-container\" key=\"iconContainer\">\n            { icon !== \"\" && typeof brandIconSet[ faIcon ] !== \"undefined\" ?\n              <FontAwesomeIcon className=\"skill-icon\" icon={brandIconSet[ faIcon ]}/>\n              :\n              undefined\n            }\n        </div>\n        ),\n        (\n          <div className=\"skill-info-container\" key=\"skillContainer\">\n            <div className=\"skill-name\">{name}</div>\n            <div className=\"skill-progress-container\">\n              <div className=\"skill-row\">\n                <span className=\"skill-label\">Skill </span>\n                <div className=\"spacer\"/>\n                {level}/10\n              </div>\n              <LinearProgress variant=\"determinate\" value={level / 10 * 100} />\n              <div className=\"skill-row\">\n                <span className=\"skill-label\">Interest </span>\n                <div className=\"spacer\"/>\n                {interest}\n              </div>\n              <div className=\"skill-row\">\n                <span className=\"skill-label\">Last used </span>\n                <div className=\"spacer\"/>\n                <div className=\"last-used-value\">{lastUsed}</div>\n              </div>\n            </div>\n          </div>\n        ),\n      ];\n    };\n\n\n    return (\n      ( !newFlag || newFlag && editMode ) ?\n        (\n          <div\n            className={\"skill-container\" +\n            ( editMode ? \" clickable\" : \"\" ) +\n            ( selectedSkill === id ? \" selected-skill\" : \"\" )}\n            onClick={handleSelectSkill}\n          >\n\n          { newFlag ?\n            <div className=\"add-button__container\">\n              <AddIcon className=\"add-button\"/>\n              <div className=\"new-skill-label\">\n                Add New Skill\n              </div>\n            </div> :\n            renderStaticSkillPreivew()\n          }\n\n          { selectedSkill === id ?\n            <span className=\"input-container\">\n              {renderSkillIconSelect()}\n              {renderSkillNameTextInput()}\n              {renderSkillLevelSlider()}\n              {renderInterestLevelSelect()}\n              {renderLastUsedSelect()}\n\n\n              {\n                /**\n                 * Action Buttons\n                 * --------------\n                 */\n              }\n              <div className=\"action-button-container\">\n                <Tooltip title=\"Save\">\n                  <Fab\n                      aria-label=\"Save\"\n                      className=\"check-button action-button\"\n                      onClick={handleUpdateSkillClicked}\n                      size=\"small\"\n                  >\n                    <CheckIcon/>\n                  </Fab>\n                </Tooltip>\n\n                <Tooltip title=\"Cancel\">\n                  <Fab size=\"small\" aria-label=\"Cancel\" className=\"action-button\" onClick={handleResetSkill} >\n                    <ClearIcon/>\n                  </Fab>\n                </Tooltip>\n\n                {\n                  newFlag ?\n                    undefined\n                    :\n                    <Tooltip title=\"Delete\">\n                      <Fab\n                        size=\"small\"\n                        className=\"delete-button action-button\"\n                        color=\"secondary\"\n                        aria-label=\"Delete\"\n                        onClick={handleDeleteSkill}\n                      >\n                        <DeleteForeverIcon/>\n                      </Fab>\n                    </Tooltip>\n                }\n              </div>\n            </span>\n            :\n            undefined\n          }\n          </div>\n        )\n        :\n        <div/>\n    );\n};\n\nexport default SkillComponent;\n","export default class SkillModel {\n    public name: string = \"\";\n    public level: number = 5;\n    public interest: \"Low\"|\"Moderate\"|\"High\"|\"Highest\"| string = \"High\";\n    public lastUsed: \"Before This Year\"|\"This Year\"|\"Last Month\"|\"This Month\"|\"Current\" | string = \"Current\";\n    public icon: string = \"Js\";\n    public id?: string = \"new\";\n}\n","// React\nimport React, { useContext } from \"react\";\n\n// Component\nimport SkillComponent from \"./Skill.component\";\n\n// States\nimport { types } from \"../../context/reducers\";\nimport { StoreContext } from \"../../context/StoreContext\";\n\n// Model\nimport SkillModel from \"../../models/SkillModel\";\n\n// Style\nimport \"./Skills.component.scss\";\n\n\nconst SkillsComponent = ( ) => {\n  const { state, dispatch, actions } = useContext(StoreContext);\n  const selectedSkill: string =  state.selectedSkill;\n  const editMode: boolean = state.editMode;\n  const skills: SkillModel[] = state.skills;\n  const newSkill = new SkillModel();\n\n\n  const handleDeleteSkill = (id: string): void => actions.deleteSkill(id);\n\n\n  const handleUpdateSkill = ( skill: SkillModel ): void => {\n    actions.updateSkill( skill );\n  };\n\n\n  const handleSelectSkill = ( id: string ): void => {\n    dispatch( {\n      selectedSkill: id,\n      type: types.SELECT_SKILL,\n    } );\n  };\n\n\n  return (\n    <div className={\"skills-container\"} >\n      {\n        editMode ?\n        <SkillComponent\n          {...newSkill}\n          editMode={editMode}\n          key=\"new\"\n          newFlag={true}\n          onUpdateSkill={handleUpdateSkill}\n          onSelectSkill={handleSelectSkill}\n          selectedSkill={selectedSkill}\n        />\n        :\n        undefined\n      }\n      { skills.map ( ( skill: SkillModel ) =>\n        <SkillComponent\n          {...skill}\n          editMode={editMode}\n          key={skill.id}\n          onDeleteSkill={handleDeleteSkill}\n          onUpdateSkill={handleUpdateSkill}\n          onSelectSkill={handleSelectSkill}\n          selectedSkill={selectedSkill}\n        /> )\n      }\n    </div>\n  );\n};\n\nexport default SkillsComponent;\n","// React\nimport React, { useContext } from \"react\";\n\n// Context\nimport { types } from \"../../context/reducers\";\nimport { StoreContext } from \"../../context/StoreContext\";\n\n// Material UI\nimport { IconButton, Snackbar } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\n// Model\nimport GenericSnackbarModel from \"../../models/GenericSnackbarModel\";\n\nconst GenericSnackbarComponent = () => {\n    const { state, dispatch, actions } = useContext( StoreContext );\n    const genericSnackbar: GenericSnackbarModel = state.genericSnackbar;\n    const { open, hideDuration, message } = genericSnackbar;\n\n\n    /**\n     * Close the generic snackbar\n     */\n    const handleClose = (): void => {\n      dispatch({\n        type: types.HIDE_GENERIC_SNACKBAR,\n      });\n    };\n\n\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            horizontal: \"left\",\n            vertical: \"bottom\",\n          }}\n          open={open}\n          autoHideDuration={hideDuration}\n          onClose={handleClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\",\n          }}\n          message={<span id=\"message-id\">{message}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={handleClose}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n};\n\nexport default GenericSnackbarComponent;\n","// React\nimport React, { useContext } from \"react\";\n\n// Component\nimport ExperiencesComponent from \"./components/ExperiencesComponent/Experiences.component\";\nimport HeaderComponent from \"./components/HeaderComponent/Header.component\";\nimport IntroComponent from \"./components/IntroComponent/Intro.component\";\nimport SkillsComponent from \"./components/SkillsComponent/Skills.component\";\nimport GenericSnackbarComponent from \"./components/snackbars/GenericSnackbar.component\";\n\n// Style\nimport \"./App.scss\";\nimport { StoreContext } from \"./context/StoreContext\";\n\nconst App = ( ) => {\n\n  const { actions } = useContext( StoreContext );\n\n  return (\n    <div className=\"App\">\n      <HeaderComponent />\n      <div className=\"content-container\">\n        <div className=\"content\">\n          <IntroComponent/>\n          <SkillsComponent/>\n          <ExperiencesComponent/>\n        </div>\n      </div>\n      <GenericSnackbarComponent/>\n    </div>\n  );\n};\n\nexport default App;\n","// React\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Component\nimport App from \"./App\";\n\n// State\nimport { StoreProvider } from \"./context/StoreContext\";\n\n// FontAwesome\nimport { library } from \"@fortawesome/fontawesome-svg-core\"\nimport { faStroopwafel } from \"@fortawesome/free-solid-svg-icons\"\n\n// Style\nimport \"./index.css\";\n\nReactDOM.render(\n    (\n      <StoreProvider>\n          <App />\n      </StoreProvider>\n    ),\n    document.getElementById(\"root\"),\n);\n\nlibrary.add(faStroopwafel);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// Context\nimport { types } from \"./reducers\";\n\n// Model\nimport SkillModel from \"../models/SkillModel\";\nimport IStateModel from \"../models/StateModel\";\n\n// Utility\nimport uuid from \"uuid/v4\";\nimport ExperienceModel from \"../models/ExperienceModel\";\ndeclare const html2pdf: Function;\n\nexport interface IActionsModel{ \n  deleteExperience: ( id: string ) => void;\n  deleteSkill: ( id: string ) => void;\n  handlePrintModeToggle: ( printMode: boolean ) => void;\n  handlePrintPdf: () => void;\n  snackbar: ( message: string, hideDuration?: number) => void;\n  updateExperience: ( experience: ExperienceModel, selectedExperience?: string ) => void;\n  updateSkill: ( skill: SkillModel ) => void;\n}\n\nexport const useActions = (state: IStateModel, dispatch: Function) => {\n\n  /**\n   * Search and deletes a experience with the associated id\n   */\n  function deleteExperience( id: string ) {\n\n    const newExperiences = state.experiences.filter( ( experience: ExperienceModel ) => {\n      return experience.id !== id;\n    } );\n\n    dispatch( {\n        type: types.UPDATE_EXPERIENCE,\n        experiences: newExperiences,\n    } );\n  }\n\n\n  /**\n   * Search and deletes a skill with the associated id\n   */\n  function deleteSkill( id: string ) {\n\n    const newSkills = state.skills.filter( ( experience: SkillModel ) => {\n      return experience.id !== id;\n    } );\n\n    dispatch( {\n        type: types.UPDATE_SKILL,\n        skills: newSkills,\n    } );\n  }\n\n\n  /**\n   * Hides toolbar for print, clicking on the toolback again should return the page to its initial state\n   */\n  const handlePrintModeToggle = ( printMode: boolean ) => {\n    if ( !printMode ) {\n      dispatch( {\n        type: types.TOGGLE_PRINT,\n        printMode: false,\n      } );\n      // Adjust the margin for print\n      const $content: HTMLElement|null = document.querySelector( \".content\" );\n      $content && ( $content.style.margin = \"initial\" );\n    } else {\n      dispatch( {\n        type: types.TOGGLE_PRINT,\n        printMode: true,\n      } );\n      // Adjust the margin for print\n      const $content: HTMLElement|null = document.querySelector( \".content\" );\n      $content && ( $content.style.margin = \"-4rem\" );\n      snackbar( \"Click anywhere on the screen to turn off print mode\" );\n    }\n\n  };\n\n\n  /**\n   * Prints the resume to pdf, has display issues\n   */\n  const handlePrintPdf = () => {\n\n    // Hide the SVG icons that cannot be render correctly\n    document.querySelectorAll( \".skill-icon\" ).forEach( (icon: any) => {\n      icon.style.display = \"none\";\n    } );\n\n    // Move the margin up to remove the empty space for the pdf\n    const $content: HTMLElement|null = document.querySelector( \".content\" );\n    $content && ($content.style.margin = \"-50px 0 0\" );\n\n    html2pdf( document.querySelector( \".content\"), {\n      margin: 0.4,\n      filename: `Resume.pdf`,\n      image: {\n        type: \"jpeg\",\n        quality: 0.90,\n      },\n      enableLinks: false,\n      html2canvas: {\n        onrendered( ) {\n          // Return the svg icons after pdf generation\n          document.querySelectorAll( \".skill-icon\" ).forEach( (icon: any) => {\n            icon.style.display = \"initial\";\n          } );\n\n          // Return the top margin after pdf generation\n          const $content: HTMLElement|null = document.querySelector( \".content\" );\n          $content && ( $content.style.margin = \"initial\" );\n        },\n        dpi: 600,\n        letterRendering: false,\n        width: 730,\n      },\n      jsPDF: {\n        unit: \"in\",\n        format: \"letter\",\n        orientation: \"portrait\",\n      },\n    });\n  };\n\n\n  /**\n   * Search and updates an existing experience or creates a new experience if the id is 'new'\n   */\n  function updateExperience( experience: ExperienceModel, selectedExperience?: string ) {\n    let newExperiences;\n    // Special handler for new experience\n    if ( experience.id === \"new\") {\n      newExperiences = [\n        ...state.experiences,\n        {\n          ...experience,\n          id: uuid(),\n        },\n      ];\n    } else {\n      newExperiences = state.experiences.reduce( ( result: ExperienceModel[], _experience: ExperienceModel ) => {\n        const updateExperience: ExperienceModel =  (_experience.id === experience.id ) ? experience : _experience;\n        return [\n          ...result,\n          updateExperience,\n        ];\n      }, [] );\n    }\n    dispatch( {\n      type: types.UPDATE_EXPERIENCE,\n      experiences: newExperiences,\n      selectedExperience: selectedExperience || undefined,\n    } );\n  }\n\n\n  /**\n   * Search and updates an existing skill or creates a new skill if the id is 'new'\n   */\n  function updateSkill( skill: SkillModel ) {\n    let newSkills;\n    // Special handler for new skill\n    if ( skill.id === \"new\") {\n      newSkills = [\n        ...state.skills,\n        {\n          ...skill,\n          id: uuid(),\n        },\n      ];\n    } else {\n      newSkills = state.skills.reduce( ( result: SkillModel[], _skill: SkillModel ) => {\n        const updateSkill: SkillModel =  (_skill.id === skill.id ) ? skill : _skill;\n        return [\n          ...result,\n          updateSkill,\n        ];\n      }, [] );\n    }\n    dispatch( {\n      skills: newSkills,\n      type: types.UPDATE_SKILL,\n    } );\n  }\n\n\n  /**\n   * Utility function to generate generic snackbar\n   */\n  function snackbar( message: string, hideDuration?: number) {\n    dispatch( {\n      hideDuration,\n      message,\n      type: types.SHOW_GENERIC_SNACKBAR,\n    } );\n  }\n\n  return {\n    deleteExperience,\n    deleteSkill,\n    handlePrintModeToggle,\n    handlePrintPdf,\n    snackbar,\n    updateExperience,\n    updateSkill,\n  };\n};\n"],"sourceRoot":""}